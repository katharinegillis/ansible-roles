---
- name: add ssl certificate directory
  file:
    path: "/etc/ssl/certs/"
    state: directory
  become: true
  when: nginx_ssl_certificates is defined
  with_items: "{{ nginx_ssl_certificates }}"

- name: add ssl key directory
  file:
    path: "/etc/ssl/private/"
    state: directory
  become: true
  when: nginx_ssl_certificates is defined
  with_items: "{{ nginx_ssl_certificates }}"

- name: add ssl certificate
  copy:
    content: "{{ item.certificate }}"
    dest: "/etc/ssl/certs/{{ item.domain }}.crt"
  become: true
  when: nginx_ssl_certificates is defined
  with_items: "{{ nginx_ssl_certificates }}"

- name: add ssl key
  copy:
    content: "{{ item.key }}"
    dest: "/etc/ssl/private/{{ item.domain }}.key"
  become: true
  when: nginx_ssl_certificates is defined
  with_items: "{{ nginx_ssl_certificates }}"
  notify:
    - restart nginx

- name: disable default site
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  become: true
  notify:
    - restart nginx

- name: copy site config(s)
  template:
    src: "{{ playbook_dir }}/{{ nginx_local_dir }}/{{ item.name }}.j2"
    dest: "/etc/nginx/sites-available/{{ item.name }}"
  become: true
  with_items: "{{ nginx_sites }}"
  notify:
    - restart nginx

- name: enable site
  file:
    src: "/etc/nginx/sites-available/{{ item.name }}"
    dest: "/etc/nginx/sites-enabled/{{ item.name }}"
    state: link
  become: true
  with_items: "{{ nginx_sites }}"
  notify:
      - restart nginx